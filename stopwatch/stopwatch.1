.TH STOPWATCH 1 eutils-1.0.0
.SH NAME
stopwatch - run a stopwatch
.SH SYNOPSIS
.SY stopwatch
.OP \-p
.OP \-c time
.OP \-t time
.YS
.SH DESCRIPTION
Run an interactive stopwatch in your terminal. Your terminal should support ANSI
escape characters and non-line-buffered input (most Linux/BSD terminals should
be fine).

The smallest time interval measured is milliseconds. The largest is hours. See
.B LIMITATIONS
for information on accuracy.
.SH KEYS
.TP
.B Q
Exit cleanly
.TP
.B C
Reset timer
.TP
.B
L
Clear screen
.TP
.B space
Pause timer
.TP
.B H or ?
Show onscreen help
.SH FLAGS
.TP
.B \-c
Run in timer mode, starting from
.I time
.TP
.B \-t
Start at
.I time
.TP
.B \-p
Start paused
.SH TIME SYNTAX
When specifying the time for
.B \-c
or
.B \-t
, the syntax of standard Go durations is accepted. This is a human readable time
with each segment followed by the unit measured. For example:
.I "1h10m30s"
translates to one hour, ten minutes and thirty seconds. The time units are as
follows:
.TP
.B h
Hour
.TP
.B m
Minute
.TP
.B s
Second
.TP
.B ms
Millisecond
.TP
.B ns
Nanosecond
.SH LIMITATIONS
Although the counter is guaranteed to always be accurate, screen redraws only
occur on an approximate basis. This should be almost unnoticeable, but the timer
may lag under heavy system load. Program startup is deliberately excluded from
the timing, so do not use to measure program execution time - use
.BR time (1)
instead.
.SH SEE ALSO
.BR time (1), times (1P)
.SH CREDITS
Written by Ethan Marshall - 2021
.SH BUGS
Surely not
